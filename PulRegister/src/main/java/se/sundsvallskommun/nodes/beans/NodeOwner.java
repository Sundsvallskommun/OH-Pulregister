package se.sundsvallskommun.nodes.beans;

import java.io.InputStream;
import java.io.Serializable;
import java.lang.reflect.Field;
import java.util.List;
import java.util.Map;


import org.w3c.dom.Document;
import org.w3c.dom.Element;

import se.unlogic.hierarchy.core.interfaces.AccessInterface;
import se.unlogic.hierarchy.core.interfaces.SearchableItem;
import se.unlogic.standardutils.annotations.WebPopulate;
import se.unlogic.standardutils.dao.annotations.DAOManaged;
import se.unlogic.standardutils.dao.annotations.Key;
import se.unlogic.standardutils.dao.annotations.ManyToMany;
import se.unlogic.standardutils.dao.annotations.ManyToOne;
import se.unlogic.standardutils.dao.annotations.OneToMany;
import se.unlogic.standardutils.dao.annotations.Table;
import se.unlogic.standardutils.reflection.ReflectionUtils;
import se.unlogic.standardutils.string.StringUtils;
import se.unlogic.standardutils.xml.GeneratedElementable;
import se.unlogic.standardutils.xml.XMLElement;

@Table(name = "node_owner")
@XMLElement
public class NodeOwner extends GeneratedElementable implements SearchableItem, Serializable , Comparable<NodeOwner>{

	private static final long serialVersionUID = 5167465509406930594L;
	
	public static Field TYPE_RELATION = ReflectionUtils.getField(NodeOwner.class, "nodeType");
	public static Field ATTRIBUTES_RELATION = ReflectionUtils.getField(NodeOwner.class, "nodeAttributes");
	public static Field TAGS_RELATION = ReflectionUtils.getField(NodeOwner.class, "nodeTags");

	@DAOManaged(columnName = "node_id", autoGenerated = true)
	@Key
	@XMLElement
	private Integer node_id;
	
	@DAOManaged(columnName = "name")
	@XMLElement
	@WebPopulate(required = true, maxLength = 150)
	private String name;
	
	@DAOManaged(columnName = "parent_node")
	@XMLElement
	@WebPopulate(required = false)
	private Integer parentNodeID;

	
	@DAOManaged(columnName = "type")
	@ManyToOne(autoGet=true)
	@XMLElement(name="NodeType")	
	private NodeType nodeType;
	
	@DAOManaged
	@OneToMany(autoGet=true,autoAdd=true,autoUpdate=true)
	@XMLElement(name="NodeAttributes")	
	private List<NodeAttribute> nodeAttributes;
	
	@DAOManaged(dontUpdateIfNull=true)
	@OneToMany(autoAdd=true,autoUpdate=true,autoGet=false)
	@XMLElement(name="AttachedFiles")	
	private List<NodeFile> nodeFiles;
	
	@DAOManaged(dontUpdateIfNull=true)
	@OneToMany(autoGet=false)
	@XMLElement(name="geo",skipChildParentElement=true)	
	private List<NodeGeoLocation> geoLocations;
	
	@DAOManaged
	@ManyToMany(linkTable="node_tags",autoAdd=true,autoGet=true,autoUpdate=true)
	@XMLElement(name="NodeTags")	
	private List<NodeTag> nodeTags;
	
	@XMLElement(name="editUrl")	
	private String editUrl;
	
	@DAOManaged(columnName = "node_owner_group")
	@XMLElement
	private Integer groupOwnerID;
	
	
	@XMLElement(name="hasNotes")	
	private Boolean hasNotes = false;
	
	@XMLElement(name="hasActionRequired")	
	private Boolean hasActionRequired = false;
	
	public List<NodeTag> getFacilityNodeTags() {
		return nodeTags;
	}

	public void setFacilityNodeTags(List<NodeTag> facilityNodeTags) {
		this.nodeTags = facilityNodeTags;
	}

	public List<NodeFile> getFacilityNodeFiles() {
		return nodeFiles;
	}

	public void setFacilityNodeFiles(List<NodeFile> facilityNodeFiles) {
		this.nodeFiles = facilityNodeFiles;
	}

	public List<NodeAttribute> getFacilityNodeAttributes() {
		return nodeAttributes;
	}

	public void setFacilityNodeAttributes(List<NodeAttribute> facilityNodeAttributes) {
		this.nodeAttributes = facilityNodeAttributes;
	}

	public Integer getNode_id() {
		return node_id;
	}

	public void setNode_id(Integer node_id) {
		this.node_id = node_id;
	}
	

	public Integer getParent_node_id() {
		return parentNodeID;
	}

	public void setParent_node_id(Integer parent_node_id) {
		this.parentNodeID = parent_node_id;
	}

	public NodeType getFacilityNodeType() {
		return nodeType;
	}

	public void setFacilityNodeType(NodeType facility_node_type) {
		this.nodeType = facility_node_type;
	}
	
	public NodeAttribute getAttributeFromID( Integer attrID )
	{
		for ( NodeAttribute attr : this.nodeAttributes)
		{
			if ( attr.getAttributeID() != null &&  attr.getAttributeID().equals( attrID ) ) return attr;
		}
		return null;
	}
	
	@Override
	public Element toXML(Document doc) {
		
		this.hasNotes = false;
		this.hasActionRequired = false;
		
		if ( this.nodeAttributes != null && this.nodeAttributes.size() > 0 ) {
			
			for ( NodeAttribute attribute : this.nodeAttributes ) {
				if ( attribute.getNote() != null && attribute.getNote() != "" ) {
					this.hasNotes = true;
					break;
				}
			}
			
			for ( NodeAttribute attribute : this.nodeAttributes ) {
				if(attribute.getTemplateID().getTemplateAttributeID() >=101 && attribute.getTemplateID().getTemplateAttributeID() <=199 && attribute.getValue() != null && !"".equals(attribute.getValue())) {
					this.hasActionRequired = true;
					break;
				}				
			}
		}
		

		Element fileElement = super.toXML(doc);		
		return fileElement;
	}
	

	@Override
	public String getID() 
	{
		return this.node_id.toString();		
	}

	@Override
	public String getAlias() {

		return "viewfacility/" + this.node_id;		
	}

	@Override
	public String getTitle() {

		return this.name;
	}
	
	@Override
	public String getContentType() {

		return "text/html";
	}

	@Override
	public InputStream getData() throws Exception {
		
		String data = name;

		return StringUtils.getInputStream(data);		
	}

	@Override
	public long getLastModified() {

		return 0;
	}

	@Override
	public AccessInterface getAccessInterface() {

		return null;
	}

	@Override
	public Map<String, ? extends Object> getAttributes() {

		return null;
	}

	public List<NodeGeoLocation> getFacilityGeoLocations() {
		return geoLocations;
	}

	public void setFacilityGeoLocations(List<NodeGeoLocation> geoLocations) {
		this.geoLocations = geoLocations;
	}	

	public void setSkipTemplatesInXML( Boolean val ) {
		
		this.nodeType.setSkipTemplatesInXML(val);
	}

	public String getEditUrl() {
		return editUrl;
	}

	public void setEditUrl(String editUrl) {
		this.editUrl = editUrl;
	}
	
	

	public Integer getGroupOwnerID() {
		return groupOwnerID;
	}

	public void setGroupOwnerID(Integer groupOwnerID) {
		this.groupOwnerID = groupOwnerID;
	}

	@Override
	public int compareTo(NodeOwner a) {
			
		String lhs_val = this.getTitle();
		String rhs_val = a.getTitle();
		
		int result = lhs_val.compareTo( rhs_val );
		
		return result;
	}
	
}
