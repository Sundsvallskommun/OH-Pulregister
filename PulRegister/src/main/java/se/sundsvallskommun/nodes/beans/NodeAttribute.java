package se.sundsvallskommun.nodes.beans;

import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.List;

import se.sundsvallskommun.nodes.tools.DynamicAttributes;
import se.unlogic.standardutils.annotations.WebPopulate;
import se.unlogic.standardutils.dao.annotations.DAOManaged;
import se.unlogic.standardutils.dao.annotations.Key;
import se.unlogic.standardutils.dao.annotations.ManyToOne;
import se.unlogic.standardutils.dao.annotations.OneToMany;
import se.unlogic.standardutils.dao.annotations.Table;
import se.unlogic.standardutils.xml.GeneratedElementable;
import se.unlogic.standardutils.xml.XMLElement;
import se.unlogic.standardutils.xml.XMLUtils;

import org.w3c.dom.Document;
import org.w3c.dom.Element;


@Table(name = "node_attributes")
@XMLElement
public class NodeAttribute extends GeneratedElementable implements Comparable<NodeAttribute> {

	@DAOManaged(columnName = "attribute_id", autoGenerated = true)
	@Key
	@XMLElement
	private Integer attributeID;
	
	@DAOManaged(columnName = "template_id")
	@XMLElement
	@ManyToOne(autoGet=true)
	private NodeTemplateAttribute templateID;
	
	@DAOManaged(columnName = "parent_node")
	@ManyToOne	
	private NodeOwner parentNode;
	
	@DAOManaged(columnName = "value")
	@WebPopulate(required = true)
	@XMLElement
	private String value;
	
	/*
	@DAOManaged
	@WebPopulate
	@XMLElement
	private Boolean requiredAction;
	*/
	
	@DAOManaged
	@OneToMany(autoGet=true,autoAdd=true,autoUpdate=true)
	@XMLElement(name="Note")
	private List<NodeAttributeNote> note;
	
	private Boolean handled = false;
	
	@Override
	public Element toXML(Document doc) {
		
		try {
			Element element = DynamicAttributes.generateAttributeDetailsXml(
					super.toXML(doc),
					this.getName(),
					this.getType(),
					this.getAttributeID(),
					this.getTemplateID() != null ? this.getTemplateID().getTemplateAttributeID() : -1 );			
			return element;			
		} catch (UnsupportedEncodingException e) {
			return null;			
		}		
	}


	public NodeOwner getParentNode() {
		return parentNode;
	}


	public void setParentNode(NodeOwner parentNode) {
		this.parentNode = parentNode;
	}


	public String getName() {
		return templateID.getName();
	}


	public String getValue() {
		return value;
	}


	public void setValue(String value) {
		this.value = value;
	}


	public String getType() {
		return templateID.getType();
	}

	

	public Integer getAttributeID() {
		return attributeID;
	}


	public void setAttributeID(Integer attributeID) {
		this.attributeID = attributeID;
	}
	
	public NodeTemplateAttribute getTemplateID() {
		return templateID;
	}


	public void setTemplateID(NodeTemplateAttribute templateID) {
		this.templateID = templateID;
	}


	@Override
	public int compareTo(NodeAttribute a) {
			
		int lhs_val = this.getTemplateID().getTemplateAttributeID();
		int rhs_val = a.getTemplateID().getTemplateAttributeID();
		
		int pre_result = lhs_val > rhs_val ? 1 : lhs_val < rhs_val ? -1 : 0;
		
		if ( this.getTemplateID().getParentTemplateAttribute() != null ) {
			lhs_val = this.getTemplateID().getParentTemplateAttribute() + 1;
		}
		
		if ( a.getTemplateID().getParentTemplateAttribute() != null ){
			rhs_val = a.getTemplateID().getParentTemplateAttribute() + 1;
		}
		
		int result = lhs_val > rhs_val ? 1 : lhs_val < rhs_val ? -1 : 0;
		
		if ( pre_result != 0 && result == 0 )
			return pre_result;
		
		return result;
	}


	public Boolean getHandled() {
		return handled;
	}


	public void setHandled(Boolean handled) {
		this.handled = handled;
	}


	public List<NodeAttributeNote> getNoteList() {
		return note;
	}
	
	public NodeAttributeNote getNote() {
		
		return this.note != null && this.note.size() > 0 ? this.note.get(0) : null;		
	}


	public void setNote(List<NodeAttributeNote> note) {
		this.note = note;
	}
	
	public void setNote(NodeAttributeNote note) {
		
		this.note = new ArrayList<NodeAttributeNote>();
		this.note.add(note);
	}

	/*
	public Boolean getRequiredAction() {
		return requiredAction;
	}

	public void setRequiredAction(Boolean requiredAction) {
		this.requiredAction = requiredAction;
	}
	*/
	
}
