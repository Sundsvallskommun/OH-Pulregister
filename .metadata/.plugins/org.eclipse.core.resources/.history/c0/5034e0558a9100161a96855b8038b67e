<?xml version="1.0"?>
<xsl:stylesheet version="2.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="html" encoding="utf-8" indent="yes" />

	<xsl:template name="AddNode">
	
		<xsl:call-template name="DynamicAttributesInit"/>		
		
		<div class="container">

			<xsl:if test="validationException">
				<div class="alert alert-danger" role="alert">
					<xsl:apply-templates select="validationException/validationError" />
				</div>
			</xsl:if>

			<h2>
				Lägg till
				<xsl:value-of select="FacilityNodeTypes/FacilityNodeType/name"></xsl:value-of>
			</h2>		
			
			<form class="form-horizontal" role="form" action="{/document/requestinfo/url}"
				method="post" enctype="multipart/form-data" onsubmit="return false;">	
				
				<script>
					<![CDATA[
					$(document).on("keypress", "form", function(event) {
						return event.keyCode != 13 && event.ctrlKey == false;
					});
					]]>
				</script>				
				
				<xsl:call-template name="AddFacilityForm" />
				<xsl:call-template name="IterateTemplateAttributes" />

				<input type="hidden" id="type" name="type" class="form-control"
					value="{FacilityNodeTypes/FacilityNodeType/type_id}" />


				<div class="row">
					<div class="col-xs-12 col-sm-12 col-md-11 col-lg-9" style="padding-right: 0px;">
						<button onclick="form.submit()" class="btn btn-success pull-right">
							<span class="glyphicon glyphicon-ok"></span>
							Lägg till
						</button>
					</div>
				</div>
				<xsl:apply-templates select="validationException/validationError" />
											
			</form>
		</div>
	</xsl:template>

	<xsl:template name="AddFacilityForm">


		<div class="row">
			<div class="col-xs-12 col-sm-5 col-md-4 col-lg-3">
				<label for="name" class="control-label">Namn:</label>
			</div>
			<div class="col-xs-9 col-sm-7 col-md-7 col-lg-6">
				<div class="form-group">
					<xsl:call-template name="createTextField">
						<xsl:with-param name="id" select="'name'" />
						<xsl:with-param name="name" select="'name'" />
						<xsl:with-param name="value" select="FacilityNode/name" />
						<xsl:with-param name="placeholder" select="FacilityNode" />
						<xsl:with-param name="class" select="'form-control'" />
						<xsl:with-param name="width" select="'100%'" />
						<xsl:with-param name="maxlength" select="'50'" />
					</xsl:call-template>
				</div>
			</div>
		</div>

	</xsl:template>
	

	<xsl:template name="HandleTemplateAttributeType">
		
		<xsl:if test="type='FILES'">
			<xsl:call-template name="FileType" />
		</xsl:if>
		<xsl:if test="type='ENUM'">
			<xsl:call-template name="EnumType" />
		</xsl:if>
		<xsl:if test="type='STRING'">
			<xsl:call-template name="StringType" />
		</xsl:if>
		<xsl:if test="type='DATE'">
			<xsl:call-template name="DateType" />
		</xsl:if>
		<xsl:if test="type='YEAR'">
			<xsl:call-template name="YearType" />
		</xsl:if>
		<xsl:if test="type='BOOL'">
			<xsl:call-template name="BoolType" />
		</xsl:if>
		<xsl:if test="type='INTEGER'">
			<xsl:call-template name="IntegerType" />
		</xsl:if>		
		<xsl:if test="type='TAGS'">
			<xsl:call-template name="TagsType" />
		</xsl:if>
		<xsl:if test="type='URL'">
			<xsl:call-template name="UrlType" />
		</xsl:if>
	</xsl:template>

	<xsl:template match="ParentNodeType|FacilityNodeType">

		<xsl:apply-templates select="ParentNodeType" />
		<h4>
			<xsl:value-of select="name" />
		</h4>
		<div class="container">
			<xsl:for-each select="facilityTemplateAttributes/FacilityTemplateAttribute">

				<xsl:call-template name="HandleTemplateAttributeType" />

			</xsl:for-each>
			<xsl:for-each select="facilityNodeAttributes/FacilityNodeAttribute">

				<xsl:call-template name="HandleTemplateAttributeType" />

			</xsl:for-each>
			
		</div>
	</xsl:template>

	<xsl:template name="IterateTemplateAttributes">
		<!-- 
		<xsl:for-each
			select="FacilityNodeTypes/FacilityNodeType/facilityTemplateAttributes/FacilityTemplateAttribute">

			<xsl:call-template name="HandleTemplateAttributeType" />

		</xsl:for-each>
		 -->
		<xsl:apply-templates select="FacilityNodeTypes" />
	</xsl:template>
	
	<xsl:template match="NodeTags">
	</xsl:template>

</xsl:stylesheet>