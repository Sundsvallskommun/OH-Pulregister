<?xml version="1.0"?>
<xsl:stylesheet version="2.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="html" encoding="utf-8" indent="yes" />


	<xsl:template name="DynamicAttributesInit">
		<!-- <link href="{/document/requestinfo/contextpath}/static/f/{/document/module/sectionID}/{/document/module/moduleID}/css/bootstrap.css" 
			rel="stylesheet"/> -->
			
		<link
			href="{/document/requestinfo/contextpath}/static/f/{/document/module/sectionID}/{/document/module/moduleID}/css/bootstrap3/bootstrap-switch.css"
			rel="stylesheet" />
		
		
		<script type="text/javascript"
			src="{/document/requestinfo/contextpath}/static/f/{/document/module/sectionID}/{/document/module/moduleID}//js/select2.min.js"></script>
		
		<link rel="stylesheet"
			href="{/document/requestinfo/contextpath}/static/f/{/document/module/sectionID}/{/document/module/moduleID}//css/select2.min.css"></link>

		<script type="text/javascript"
			src="{/document/requestinfo/contextpath}/static/f/{/document/module/sectionID}/{/document/module/moduleID}/js/jquery.bootstrap-touchspin.min.js"></script>
		<script type="text/javascript"
			src="{/document/requestinfo/contextpath}/static/f/{/document/module/sectionID}/{/document/module/moduleID}/js/bootstrap-switch.min.js"></script>

		<script
			src="{/document/requestinfo/contextpath}/static/f/{/document/module/sectionID}/{/document/module/moduleID}/js/bootstrap-datepicker.min.js"></script>

		<script
			src="{/document/requestinfo/contextpath}/static/f/{/document/module/sectionID}/{/document/module/moduleID}/locales/bootstrap-datepicker.sv.min.js"
			charset="UTF-8"></script>
		<script
			src="{/document/requestinfo/contextpath}/static/f/{/document/module/sectionID}/{/document/module/moduleID}/locales/bootstrap-datepicker.en-GB.min.js"
			charset="UTF-8"></script>			
		
		<link id="bsdp-css" 
			href="{/document/requestinfo/contextpath}/static/f/{/document/module/sectionID}/{/document/module/moduleID}/css/bootstrap-datepicker3.standalone.min.css"
			rel="stylesheet" />
			
			
			
		<script type="text/javascript"
			src="{/document/requestinfo/contextpath}/static/f/{/document/module/sectionID}/{/document/module/moduleID}/js/bootstrap-tagsinput.min.js"></script>
			
		<script type="text/javascript"
			src="{/document/requestinfo/contextpath}/static/f/{/document/module/sectionID}/{/document/module/moduleID}/js/typeahead.bundle.js"></script>
			
		<link href="{/document/requestinfo/contextpath}/static/f/{/document/module/sectionID}/{/document/module/moduleID}/css/bootstrap-tagsinput.css"
			rel="stylesheet" />
			
		<link href="{/document/requestinfo/contextpath}/static/f/{/document/module/sectionID}/{/document/module/moduleID}/css/typeaheadjs.css"
			rel="stylesheet" />
			
			
			
			<!--  
		<script>
			var datepicker = $.fn.datepicker.noConflict();
			$.fn.bootstrapDP = datepicker;    
		</script> -->

	</xsl:template>
	
	<xsl:template name="generateTagOptions">
		<xsl:for-each select="/document/NodeTags/tag">					
			<option label="{value}" value="{name}" selected="false" >{value}|{name}</option>
		</xsl:for-each>
	</xsl:template>
	
	
	
	<xsl:template name="TagsType">
		<div class="row">
			<div class="col-xs-12 col-sm-5 col-md-4 col-lg-3">
				<label for="name" class="control-label">
					<xsl:value-of select="name" />
					:
				</label>
			</div>
			<div class="col-xs-11 col-sm-6 col-md-7 col-lg-8">
				<div class="form-group">
					
					<input  type="text" class="col-xs-11 col-sm-6 col-md-7 col-lg-8" data-role="tagsinput" value="{value}" name="{AttributeDetails}" id="{AttributeDetails}">
						<!-- <xsl:call-template name="generateTagOptions"/> -->
					</input>
					
					
					<script>
						var bloodhoundTags = new Bloodhound({
						  datumTokenizer: Bloodhound.tokenizers.obj.whitespace('text'),
						  queryTokenizer: Bloodhound.tokenizers.whitespace,
						  prefetch: {
						  	url : '../gettagsjson',
						  	cache:false
						  }					  
						});						
						
						bloodhoundTags.initialize();
						
												
						$("[id='<xsl:value-of select="AttributeDetails"/>']").tagsinput({
							typeaheadjs: {
						  		name: 'tags',
						    	valueKey: 'text',
						    	displayKey: 'text',
						    	source: bloodhoundTags.ttAdapter()
						  	}
						  	
						});
					</script>
					<script>
						<![CDATA[
							$(document).on("keypress", "form", function(event) { 
								return  !e.ctrlKey && e.keyCode == 13;
							});
						]]>
					</script>
				</div>
			</div>
		</div>
	</xsl:template>

	<xsl:template name="BoolType">
		<div class="row">
			<div class="col-xs-12 col-sm-5 col-md-4 col-lg-3">
				<label for="name" class="control-label">
					<xsl:value-of select="name" />
					:
				</label>
			</div>
			<div class="col-xs-11 col-sm-6 col-md-7 col-lg-8">
				<div class="form-group">
				
					<xsl:call-template name="createCheckbox">
						<xsl:with-param name="id" select="AttributeDetails" />
						<xsl:with-param name="name" select="AttributeDetails" />
						<!-- <xsl:with-param name="value" select="true"/> -->
						<!-- <xsl:with-param name="class" select="'form-control'" /> -->
						<xsl:with-param name="width" select="'50%'" />
						<xsl:with-param name="checked" select="value" />
					</xsl:call-template>
					<script>
						$("[id='<xsl:value-of select="AttributeDetails" />']").bootstrapSwitch({
						onText : 'Ja',
						offText : 'Nej',

						});
					</script>
					
					<input type="hidden" name="{AttributeDetails}" value="false" />						
			
				</div>
			</div>
		</div>
	</xsl:template>

	<xsl:template name="StringType">
		<div class="row">
			<div class="col-xs-12 col-sm-5 col-md-4 col-lg-3">
				<label for="name" class="control-label">
					<xsl:value-of select="name" />
					:
				</label>
			</div>
			<div class="col-xs-9 col-sm-7 col-md-7 col-lg-6">
				<div class="form-group">
					<xsl:call-template name="createTextField">
						<xsl:with-param name="id" select="AttributeDetails" />
						<xsl:with-param name="name" select="AttributeDetails" />
						<xsl:with-param name="value" select="value" />
						<xsl:with-param name="placeholder" select="FacilityNode" />
						<xsl:with-param name="class" select="'form-control'" />
						<xsl:with-param name="width" select="'100%'" />
						<!-- <xsl:with-param name="maxlength" select="'50'" /> -->
					</xsl:call-template>
				</div>
			</div>
		</div>
	</xsl:template>
	
	<xsl:template name="UrlType">
		<div class="row">
			<div class="col-xs-12 col-sm-5 col-md-4 col-lg-3">
				<label for="name" class="control-label">
					<xsl:value-of select="name" />
					:
				</label>
			</div>
			<div class="col-xs-9 col-sm-7 col-md-7 col-lg-6">
				<div class="form-group">
					<xsl:call-template name="createTextField">
						<xsl:with-param name="id" select="AttributeDetails" />
						<xsl:with-param name="name" select="AttributeDetails" />
						<xsl:with-param name="value" select="value" />
						<xsl:with-param name="placeholder" select="FacilityNode" />
						<xsl:with-param name="class" select="'form-control'" />
						<xsl:with-param name="width" select="'100%'" />
						
					</xsl:call-template>
				</div>
			</div>
		</div>
	</xsl:template>

	<xsl:template name="DateType">
		<div class="row">
			<div class="col-xs-12 col-sm-5 col-md-4 col-lg-3">
				<label for="name" class="control-label">
					<xsl:value-of select="name" />
					:
				</label>
			</div>
			<div class="col-xs-6 col-sm-4 col-md-4 col-lg-3">
				<div class="form-group">
					<div class="input-group date">
						<xsl:call-template name="createTextField">
							<xsl:with-param name="id" select="AttributeDetails" />
							<xsl:with-param name="name" select="AttributeDetails" />
							<xsl:with-param name="value" select="value" />
							<xsl:with-param name="placeholder" select="FacilityNode" />
							<xsl:with-param name="class" select="'form-control'" />
							<xsl:with-param name="width" select="'100%'" />
							<xsl:with-param name="maxlength" select="'50'" />
						</xsl:call-template>
						<span class="input-group-addon">
							<i class="glyphicon glyphicon-th"></i>
						</span>
						<script>
							$(".input-group.date").datepicker({
								language: "sv",
								startView: 1,				                
				                showButtonPanel: true,
				                dateFormat: 'yyyy-mm-dd',
				                autoclose: true
				                
				            });
						</script>
					</div>
				</div>
			</div>
		</div>
	</xsl:template>

	<xsl:template name="YearType">
		<div class="row">
			<div class="col-xs-12 col-sm-5 col-md-4 col-lg-3">
				<label for="name" class="control-label">
					<xsl:value-of select="name" />
					:
				</label>
			</div>
			<div class="col-xs-6 col-sm-4 col-md-4 col-lg-3">
				<div class="form-group">
					<div class="input-group date">
						<xsl:call-template name="createTextField">
							<xsl:with-param name="id" select="AttributeDetails" />
							<xsl:with-param name="name" select="AttributeDetails" />
							<xsl:with-param name="value" select="value" />
							<xsl:with-param name="placeholder" select="FacilityNode" />
							<xsl:with-param name="class" select="'form-control'" />
							<xsl:with-param name="width" select="'100%'" />
							<xsl:with-param name="maxlength" select="'50'" />
						</xsl:call-template>
						<span class="input-group-addon">
							<i class="glyphicon glyphicon-th"></i>
						</span>
						<script>
							$(".input-group.date").datepicker({
								language: "sv",
								startView: 2,
				                changeYear: true,
				                changeMonth: false,
				                showButtonPanel: true,
				                dateFormat: 'yyyy-mm-dd',
				                autoclose: true
				                
				            });
						</script>
					</div>
				</div>
			</div>
		</div>
	</xsl:template>

	<xsl:template name="EnumType">
		<div class="row">
			<div class="col-xs-12 col-sm-5 col-md-4 col-lg-3">
				<label for="name" class="control-label">
					<xsl:value-of select="name" />
					:
				</label>
			</div>
			<div class="col-xs-9 col-sm-7 col-md-7 col-lg-6">
				<div class="form-group">
					<xsl:call-template name="createDropdown">
						<xsl:with-param name="id" select="AttributeDetails" />
						<xsl:with-param name="name" select="AttributeDetails" />
						<xsl:with-param name="element" select="choices/choice" />
						<xsl:with-param name="labelElementName" select="'name'" />
						<xsl:with-param name="valueElementName" select="'value'" />
						<xsl:with-param name="selectedValue" select="value" />
						<xsl:with-param name="class" select="'form-control'" />
					</xsl:call-template>										
				</div>
			</div>
		</div>
	</xsl:template>

	<xsl:template name="IntegerType">
		<div class="row">
			<div class="col-xs-12 col-sm-5 col-md-4 col-lg-3">
				<label for="name" class="control-label">
					<xsl:value-of select="name" />
					:
				</label>
			</div>
			<div class="col-xs-2 col-sm-2 col-md-2 col-lg-2">
				<div class="form-group">
					<xsl:call-template name="createTextField">
						<xsl:with-param name="id" select="AttributeDetails" />
						<xsl:with-param name="name" select="AttributeDetails" />
						<xsl:with-param name="value" select="value" />
						<xsl:with-param name="placeholder" select="FacilityNode" />
						<xsl:with-param name="class" select="'form-control'" />
						<xsl:with-param name="width" select="'100%'" />
						<xsl:with-param name="maxlength" select="'50'" />
					</xsl:call-template>
					<script>
						$("input[name='<xsl:value-of select="AttributeDetails" />']").TouchSpin({
						initval:
						<xsl:choose>
							<xsl:when test="string-length(value)>0">
								<xsl:value-of select="value" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:text>0</xsl:text>
							</xsl:otherwise>
						</xsl:choose>
						,max: 1000000000
						,min: 0
						});
					</script>
				</div>
			</div>
		</div>
	</xsl:template>
	
	<xsl:template name="FileType">
	
		<div class="row">
		
			<fieldset>
		
			<input type="hidden" id="fileUploaderInput" name="{AttributeDetails}" value="{value}" />
		
			<div class="col-xs-12 col-sm-5 col-md-4 col-lg-3">
				<label for="fileselect"><xsl:value-of select="name" />:</label>
			</div>			
			<!-- <div class="col-xs-8 col-sm-8 col-md-8 col-lg-8"> -->
				<!--  <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4"> -->
					
					<label class="pull-left vcenter">
						<span class="btn btn-default btn-file">
		    			Lägg till filer 
		    			<input class="btn hide" type="file" id="fileselect" name="fileselect[]" multiple="multiple" />
		    			<span style="padding-left:5px;padding-right:5px;font-size:1.5em;" class="glyphicon glyphicon-folder-open" id="filedrag"/>
						</span>
					</label>
					
				<label class="pull-right vcenter" id="filesAdded"><xsl:value-of select="value" /></label>
				<!--   </div> 
				<div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">
					<label id="filesAdded"><xsl:value-of select="value" /></label>
				</div>-->
					
			<!--  </div>-->
			</fieldset>
		</div>
				
		<script>
		<![CDATA[
			$(document).on('change', ':file', function() {
			    var input = $(this),
			        numFiles = input.get(0).files ? input.get(0).files.length : 1,
			        label = input.val().replace(/\\/g, '/').replace(/.*\//, '');
			    input.trigger('fileselect', [numFiles, label,input.get(0).files]);
			});
			
				
			$(document).ready( function() {
			    $(':file').on('fileselect', function(event, numFiles, label,files) {
			        
			        filesToBeUploaded = ''
			        if(files.length > 0){
					    for(var k=0, len = files.length; k < len; k++){
					        filesToBeUploaded += files[k].name + ' ';
					    }
					}
			        
			        $("label[id='filesAdded']").text(filesToBeUploaded);
			        $("[id='fileUploaderInput']").val(filesToBeUploaded);
			        
			    });
			});	
		]]>		
		</script>
		</xsl:template>

</xsl:stylesheet>